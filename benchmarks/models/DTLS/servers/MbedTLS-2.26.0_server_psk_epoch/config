inputs=PSK_CLIENT_HELLO(java.lang.Integer:epoch)+\
PSK_CLIENT_KEY_EXCHANGE(java.lang.Integer:epoch)+\
CHANGE_CIPHER_SPEC(java.lang.Integer:epoch)+\
FINISHED(java.lang.Integer:epoch)+\
APPLICATION(java.lang.Integer:epoch);
outputs=UNKNOWN_MESSAGE(java.lang.Integer:epoch)+\
HELLO_VERIFY_REQUEST(java.lang.Integer:epoch)+\
SERVER_HELLO(java.lang.Integer:epoch)+\
SERVER_HELLO_DONE(java.lang.Integer:epoch)+\
ALERT(java.lang.Integer:epoch)+\
CHANGE_CIPHER_SPEC(java.lang.Integer:epoch)+\
FINISHED(java.lang.Integer:epoch)+\
APPLICATION(java.lang.Integer:epoch)+\
TIMEOUT()+\
SOCKET_CLOSED()+\
SERVER_HELLO|SERVER_HELLO_DONE(java.lang.Integer:epoch,java.lang.Integer:epoch)+\
CHANGE_CIPHER_SPEC|FINISHED(java.lang.Integer:epoch,java.lang.Integer:epoch)

random.seed=6521023071547789
solver=z3
logging.level=WARNING
use.ceopt=true
use.suffixopt=false
use.fresh=true
use.rwalk=true
export.model=true
eqoracle=rwalkfromstate
rwalkfromstate.prob.history=0.5
rwalkfromstate.prob.register=0.1
rwalkfromstate.prob.fresh=0.1
rwalkfromstate.prob.related=0.3
rwalkfromstate.prob.reset=0.1
rwalkfromstate.max.depth=10
rwalkfromstate.max.runs=20000
rwalkfromstate.reset.count=false
rwalkfromstate.draw.uniform=false
teachers=epoch:de.learnlib.ralib.tools.theories.IntegerEqualityTheory
constants=[{"type":"epoch","value":"0"},{"type":"epoch","value":"1"}]

output.directory=output/learn_eq_mbedtls-2.26.0_psk_epoch
#max.rounds=1
#outputquery.repeat=3

dtlsfuzzer.port=50000
dtlsfuzzer.output=true
dtlsfuzzer.directory=${user.dir}/../dtls-fuzzer
dtlsfuzzer.command=${java.home}/bin/java -jar target/dtls-fuzzer.jar args/mbedtls/cmd_mbedtls_psk -Dmbedtls.version=2.26.0 -outputFields epoch -cmdPort 50000
